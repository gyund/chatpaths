plugins {
	id 'com.android.application'
	id 'kotlin-android'
	id 'kotlin-kapt'
	id "androidx.navigation.safeargs.kotlin"
	id 'dagger.hilt.android.plugin'

	id 'com.google.gms.google-services'
	id 'com.google.firebase.crashlytics'
	id 'com.google.android.gms.oss-licenses-plugin'
}

apply from: "$project.rootDir/common.gradle"

ext {
	// Year.Month.MajorVersion.patch
	app_version = getDate()
	app_major_version = 1
	app_version_code = 135
	app_version_name = "$app_version.$app_major_version.$app_version_code"

	storeFile = null
	storePassword = null
	keyAlias = null
	keyPassword = null

	def keystoreFilePropertyKey = "chatpathsKeyStoreFile"
	if (project.hasProperty(keystoreFilePropertyKey)) {
		storeFile = file(project.getProperty(keystoreFilePropertyKey))
		storePassword = project.getProperty("chatpathsKeyStorePassword")
		keyAlias = project.getProperty("chatpathsKeyStoreAlias")
		keyPassword = project.getProperty("chatpathsKeyStoreAliasPassword")
	}
}

static def getDate() {
	return new Date().format('yyyy.MM')
}

android {
	compileSdkVersion 33
	buildToolsVersion '30.0.3'

	signingConfigs {
		release {
			keyAlias project.keyAlias
			keyPassword project.keyPassword
			storeFile project.storeFile
			storePassword project.storePassword
		}
	}

//    lintOptions {
//        checkDependencies true
//    }

	defaultConfig {
		applicationId "com.gy.chatpaths.aac.app"
		// The Billing API must be 3+ and sdk 26 is 2.0
		minSdkVersion 27
		targetSdkVersion 33
		versionCode app_version_code
		versionName app_version_name
		resConfigs 'en', 'es'


		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

		// The following argument makes the Android Test Orchestrator run its
		// "pm clear" command after each test invocation. This command ensures
		// that the app's state is completely cleared between tests.
		testInstrumentationRunnerArguments clearPackageData: 'true'
	}
	testOptions {
		execution 'ANDROIDX_TEST_ORCHESTRATOR'
	}

	buildTypes {
		debug {
			testCoverageEnabled true
			pseudoLocalesEnabled true
			versionNameSuffix '.debug'
			manifestPlaceholders applicationName: 'ChatPaths Debug'
		}
		release {
			minifyEnabled true
			shrinkResources true
			signingConfig signingConfigs.release
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			manifestPlaceholders applicationName: 'ChatPaths'
		}
	}
	buildFeatures {
		viewBinding true
		dataBinding = true
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
	kotlinOptions {
		jvmTarget = '1.8'
	}
	dynamicFeatures = []
	namespace 'com.gy.chatpaths.aac.app'
	flavorDimensions 'google'
	productFlavors {
		WithoutFirebase {
			getIsDefault().set(true) // that does the magic
			dimension 'google'
		}
		WithFirebase {
			dimension 'google'
		}
	}
}

dependencies {
	implementation fileTree(dir: "libs", include: ["*.jar"])
	implementation 'androidx.core:core-ktx:1.10.0'
	implementation 'androidx.appcompat:appcompat:1.6.1'
	implementation 'androidx.core:core-splashscreen:1.0.0'
	implementation 'androidx.legacy:legacy-support-v4:1.0.0'
	implementation 'com.google.android.material:material:1.8.0'
	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
	implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
	implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
	implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
	implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'
	implementation 'androidx.navigation:navigation-dynamic-features-fragment:2.5.3'
	implementation project(path: ':modules:model')
	implementation 'androidx.cardview:cardview:1.0.0'
	implementation 'androidx.recyclerview:recyclerview:1.3.0'
	implementation 'androidx.preference:preference-ktx:1.2.0'
	implementation 'androidx.palette:palette-ktx:1.0.0'
	implementation 'androidx.fragment:fragment-ktx:1.5.6'
	implementation 'androidx.viewpager2:viewpager2:1.0.0'
	implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

	// In-app review
	implementation 'com.google.android.play:core:1.10.3'
	implementation 'com.google.android.play:core-ktx:1.8.1'
	implementation project(path: ':modules:builder')


	testImplementation 'junit:junit:4.13.2'
	testImplementation 'androidx.test.ext:truth:1.5.0'
	androidTestImplementation 'com.google.truth:truth:1.1.3'
	androidTestImplementation 'com.google.truth.extensions:truth-java8-extension:1.1.3'
	androidTestImplementation 'androidx.test.ext:junit:1.1.5'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
	androidTestImplementation 'androidx.test:runner:1.5.2'
	androidTestUtil 'androidx.test:orchestrator:1.4.2'
	testImplementation 'org.mockito:mockito-core:5.2.0'
	androidTestImplementation 'org.mockito:mockito-core:5.2.0'
	androidTestImplementation 'org.mockito:mockito-android:5.2.0'

	// Lifecycle
	implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

	implementation "androidx.room:room-runtime:$room_version"
	kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
	implementation "androidx.room:room-ktx:$room_version"
	testImplementation "androidx.room:room-testing:$room_version"

	// Firebase
	implementation platform('com.google.firebase:firebase-bom:31.4.0')
	implementation 'com.google.firebase:firebase-crashlytics-ktx:18.3.6'
	implementation 'com.google.firebase:firebase-analytics-ktx:21.2.1'
	implementation 'com.google.firebase:firebase-messaging-ktx:23.1.2'
	implementation 'com.google.firebase:firebase-config-ktx:21.3.0'


	implementation 'com.github.yalantis:ucrop:2.2.8-native'
//    implementation 'com.squareup.picasso:picasso:2.71828'

	// Onboarding
//    implementation 'com.github.AppIntro:AppIntro:6.1.0'
	implementation 'uk.co.samuelwall:material-tap-target-prompt:3.3.2'

	implementation "com.google.dagger:hilt-android:$hilt_version"
	kapt "com.google.dagger:hilt-compiler:$hilt_version"


	// For instrumentation tests
	androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
	kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"

	// For local unit tests
	testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
	kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

	// Kotlin + coroutines
//    implementation 'androidx.work:work-runtime-ktx:2.7.0-alpha05'

	// optional - GCMNetworkManager support
	//implementation "androidx.work:work-gcm:$work_version"

	// optional - Test helpers
	androidTestImplementation "androidx.work:work-testing:2.8.1"
	implementation "androidx.core:core-ktx:1.10.0"
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.20'
}

kapt {
	correctErrorTypes true
}
repositories {
	mavenCentral()
}
