name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JAVA
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        gradle-version: 8.4
    - name: Build with Gradle
      run: ./gradlew :app:assembleWithoutFirebaseDebug testWithoutFirebaseDebugUnitTest
    - name: GitHub Action for Android Lint
      run: ./gradlew lint
    - uses: yutailang0119/action-android-lint@v4.0.0
      with:
        report-path: '**/build/reports/*.xml' # Support glob patterns by https://www.npmjs.com/package/@actions/glob
      continue-on-error: false # If annotations contain error of severity, action-android-lint exit 1.
    - name: Run spotless
      run: ./gradlew spotlessCheck

  device-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [34] # 27 hangs, due to crash_pad handler so just 34 for now (https://github.com/ReactiveCircus/android-emulator-runner/issues/381)
        target: [google_apis]
        arch: [x86, x86_64]
        exclude:
          - arch: x86_64
            api-level: 27
          - arch: x86
            api-level: 34
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: set up JAVA
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.4

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{matrix.google_apis}}-${{matrix.arch}}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{matrix.target}}
          arch: ${{matrix.arch}}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedWithoutFirebaseDebugAndroidTest
